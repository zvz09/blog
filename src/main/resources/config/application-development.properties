name=lzl
age=${random.int[0,100]}
remark=hello,my name is ${name},age is ${age}
user.address=china,zz
user.detailAddress.country=china
user.detailAddress.province=hn
user.detailAddress.city=zz


server.port=9090
#server.context-path=/demo1

logging.file=f:/log/demo1Log.log
logging.level.org.springframework.web = DEBUG

#server.ssl.key-store=.keystore
#server.ssl.key-store-password=123456
#server.ssl.key-store-type=JKS
#server.ssl.key-alias=tomcat

# 数据库访问配置
# 主数据源，默认的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/blog?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=root

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

#Jpa
# create 启动时 删除上次生成的表 并根据实体类生产表 无数据
#create-drop 启动时根据实体类生成表 sessionFactory 关闭时 删除表
#update 启动时 根就实体类生成表 属性变动 表结构也更新
#validate  启动时验证 实体类与数据表是否一致
#none 无操作
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jackson.serialization.indent-output=true


myba


#redis
spring.redis.host=123.56.217.7
spring.redis.port=6379

#spring data rest 自定义路径  （默认为根路径）
spring.data.rest.base-path=/api

#关闭 spring batch自动执行Job
spring.batch.job.enabled=false
spring.batch.initializer.enabled=false 

#devtools可以实现页面热部署（即页面修改后会立即生效
spring.thymeleaf.cache=false